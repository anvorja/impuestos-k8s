services:
  # API Gateway - Punto de entrada único a los microservicios
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - VEHICULAR_SERVICE_URL=http://impuesto-vehicular-frontend:3001
      - PREDIAL_SERVICE_URL=http://impuesto-predial-app:3002
      - CONSUMO_SERVICE_URL=http://impuesto-consumo-app:3003
      - GANADO_SERVICE_URL=http://impuesto-ganado-app:3004
    volumes:
      - n8n_config:/n8n_data:ro
    networks:
      - impuestos-network
    restart: unless-stopped
    depends_on:
      n8n:
        condition: service_started

  # Portal Principal de Impuestos
  portal-impuestos:
    build:
      context: ./portal_impuestos
      dockerfile: Dockerfile
      args:
        - VITE_N8N_WEBHOOK_URL=http://n8n:5678/webhook/3d8a4725-814b-4d5e-b9fb-faf2f20deaca/chat
    container_name: portal-impuestos
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway
    networks:
      - impuestos-network
    environment:
      - API_GATEWAY_URL=http://api-gateway:8080
    restart: unless-stopped

  # Servicio n8n para chatbot, para configuración inicial
  # Comentar/Descomentar una vez recreada la imagen
  # Tener en cuenta el volumen n8n_data: (se comenta cuando ya ha sido recreada la imagen)
  n8n:
    #image: n8nio/n8n
    image: anborja/n8n-impuestos:configurado
    container_name: n8n
    restart: always
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=false
      - N8N_HOST=n8n
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_EDITOR_BASE_URL=http://n8n:5678
      - N8N_WEBHOOK_URL=http://n8n:5678
      - N8N_USER_MANAGEMENT_DISABLED=true
      - N8N_SKIP_WEBHOOK_DEREGISTRATION_SHUTDOWN=true
      - N8N_RUNNERS_ENABLED=true
      - GROQ_API_KEY=${GROQ_API_KEY}
    volumes:
      #  se necesita n8n_data:/home/node/.n8n para config inicial
      #- n8n_data:/home/node/.n8n
      #  se necesita n8n_config:/home/node/.n8n/public:ro despues de recreada la imagen
      - n8n_config:/home/node/.n8n/public:ro
    networks:
      - impuestos-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:5678/rest/index"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Microservicio Impuesto Vehicular - Base de datos
  impuesto-vehicular-db:
    image: postgres:15-alpine
    container_name: impuesto-vehicular-db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=superapostgres
      - POSTGRES_DB=tax_vehicle_db
    ports:
      - "5433:5432"
    volumes:
      - impuesto-vehicular-data:/var/lib/postgresql/data
    networks:
      - impuestos-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # pgAdmin para administración de la base de datos
  pgadmin:
    image: dpage/pgadmin4
    container_name: impuesto-vehicular-pgadmin
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - impuesto-vehicular-db
    networks:
      - impuestos-network

  # Microservicio Impuesto Vehicular - Backend
  impuesto-vehicular-backend:
    build:
      context: ./impuesto-vehicular/backend
      dockerfile: Dockerfile
    container_name: impuesto-vehicular-backend
    restart: always
    depends_on:
      impuesto-vehicular-db:
        condition: service_healthy
    environment:
      - POSTGRES_SERVER=impuesto-vehicular-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=superapostgres
      - POSTGRES_DB=tax_vehicle_db
      - DATABASE_URL=postgresql://postgres:superapostgres@impuesto-vehicular-db:5432/tax_vehicle_db
      - SECRET_KEY=23d533c89c1e3703b90ecbb4ea2436762989b48903b360b38bd5eb63cdbcf5ce
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=20
      - FRONTEND_URL=http://impuesto-vehicular-frontend:3001
    ports:
      - "8000:8000"
    volumes:
      - ./impuesto-vehicular/backend:/app
    networks:
      - impuestos-network

  # Microservicio Impuesto Vehicular - Frontend
  impuesto-vehicular-frontend:
    build:
      context: ./impuesto-vehicular/frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=http://localhost:8000/api/v1
        - VITE_TOKEN_EXPIRY=60
        - VITE_APP_NAME=Sistema de Impuestos Vehiculares
        - VITE_APP_VERSION=1.0.0
    container_name: impuesto-vehicular-frontend
    restart: always
    ports:
      - "3001:3001"
    depends_on:
      - impuesto-vehicular-backend
    networks:
      - impuestos-network

  # Microservicio Impuesto Predial
  impuesto-predial-app:
    build:
      context: ./property_tax
      dockerfile: Dockerfile
    container_name: impuesto-predial-app
    ports:
      - "3002:3002"
    networks:
      - impuestos-network
    restart: unless-stopped

  # Microservicio Impuesto de Consumo
  impuesto-consumo-app:
    build:
      context: ./impuestoConsumo
      dockerfile: Dockerfile
    container_name: impuesto-consumo-app
    ports:
      - "3003:3003"
    networks:
      - impuestos-network
    restart: unless-stopped

  # Microservicio Impuesto Ganado Mayor
  impuesto-ganado-app:
    build:
      context: ./ganadoMayor
      dockerfile: Dockerfile
    container_name: impuesto-ganado-app
    ports:
      - "3004:3004"
    networks:
      - impuestos-network
    restart: unless-stopped

networks:
  impuestos-network:
    driver: bridge

volumes:
  impuesto-vehicular-data:
  # se comenta n8n_data cuando ya está recreada la imagen configurada
  #n8n_data:
  n8n_config:
